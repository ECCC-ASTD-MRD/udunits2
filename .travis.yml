env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   # via the "travis encrypt" command using the project repo's public key
   - secure: "eQZ5QbKP1iD1AFbv03f8zh86A+3ZtuVssTLuHYaozwnESz4ZrvSxrRVe1x6oKy8MxNUjaawQjNMAAHxfE11Bsj5r2jzqb8xcHRIbqWGgEcz/CabQH4YXFgv3GqcDsUF+M26kJ3KqS9mkpiNcG3r2dfmZBSX33rfSluFDkeglhlQ="

dist: trusty
sudo: required  # Needed to install Coverity certificate

language: c

before_install:
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
# - sudo dpkg -L libyaml-cpp-dev
# - sudo find / -name yaml-cpp
# - sudo find / -name yaml.h 
# - sudo find / -name 'libyaml-cpp.*' 
  - sudo apt-get install cmake libcunit1-dev libexpat-dev texinfo
  - test -d m4 || mkdir m4
  - autoreconf -i
  - ./configure

# The "addons" stage is executed before the "script" stage
addons:
  coverity_scan:
    project:
      name: "Unidata/UDUNITS-2"
      description: "Units of physical quantities package"
    notification_email: emmerson@ucar.edu
    build_command_prepend: true
    build_command:  "make"
    branch_pattern: master
#    branch_pattern: coverity_scan

script: make distcheck >&distcheck.log
#    if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then make all check >&make.log; fi

after_failure: cat distcheck.log
#  - cat config.log
#  - cat make.log
#  - files=`find . -name test\*.log`; cat ${files:-/dev/null}
